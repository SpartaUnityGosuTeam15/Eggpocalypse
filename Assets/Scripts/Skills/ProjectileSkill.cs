using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using static UnityEngine.GraphicsBuffer;

public class ProjectileSkill : AttackSkill
{
    Vector3 direction; //발사 방향
    public float shotSpeed; //발사속도
    public GameObject projectionPrefabs; //발사체
    public int shotCount;

    private void Update()
    {
        if (GameManager.Instance.player.closest == null)
            return;

        if (isAuto) //자동 공격일 시 일정 시간마다 실행
        {
            if (cooldown - Time.deltaTime < 0f)
            {
                StartCoroutine(makePrefabs()); //오브젝트 풀링으로 바꿀 것
                cooldown = attackRate;
            }
        }

        if (cooldown > 0f)
            cooldown -= Time.deltaTime;

    }

    public override void UseSkill()
    {
        direction = GameManager.Instance.player.closest.transform.position - new Vector3(transform.position.x, 0, transform.position.z);

        GameObject go = Instantiate(projectionPrefabs); //오브젝트 풀링으로 바꿀 것

        go.transform.position = transform.position;
        go.GetComponent<Projectile>().shotSpeed = shotSpeed;
        go.GetComponent<Projectile>().direction = direction.normalized;
        go.GetComponent<Projectile>().lifeTime = attackRange / shotSpeed;
    }

    public IEnumerator makePrefabs()
    {
        for (int i = 0; i < shotCount; i++)
        {
            UseSkill();
            yield return new WaitForSeconds(0.05f); //연속 발사시 약간의 딜레이
        }
    }

    public override void LevelUP()
    {
        base.LevelUP();
        //수치 조정
    }
}
